{"version":3,"sources":["utils/axios.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Containers/Preferences/Preferences.js"],"names":["instance","axios","create","baseURL","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Prefereces","props","useState","loading","setLoading","message","setMessage","margin","state","setState","updatePreferences","headers","localStorage","getItem","then","response","data","console","log","status","alert","history","newState","options","option","name","catch","err","useEffect","id","className","style","display","justifyContent","class","type","onChange","e","backgroundColor","color","onClick","put","disabled"],"mappings":"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","file":"static/js/8.b823d81b.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: \"http://paulthebot.chevrtech.com/\"\n})\n\nexport default instance;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, {useEffect, useState} from 'react';\nimport axios from '../../utils/axios';\nimport { Link } from 'react-router-dom';\n\nconst Prefereces = (props) => {\n    // const [state, setState] = useState({\n    //     margin: 0\n    // });\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState('');\n    const [state, setState] = useState({\n        margin: 0,\n    });\n\n    const handleSubmit = name => {\n        setLoading(true);\n        setMessage('Loading');\n        axios.put('/options', {name, value: state[name]}, {\n            headers: {\n                \"X-Auth-token\": localStorage.getItem('X-Auth-token')\n            }\n        })\n        .then(response => {\n            let data = response.data;\n            setLoading(false);\n            if(data.status == 401) {\n                setMessage(data.message);\n                props.history.push('/login');\n            }\n            if(data.status == 200) {\n                setMessage(name + ' updated');\n                updatePreferences();\n            }\n        })\n        .catch(err => {\n            console.log(err)\n            alert(err.message || 'something went wrong');\n            setLoading(false);\n            setMessage('Try again')\n        });        \n    }\n\n\n    const updatePreferences = () => {\n        axios('/options', {\n            headers: {\n                \"X-Auth-token\": localStorage.getItem('X-Auth-token')\n            }\n        })\n        .then(response => {\n            let data = response.data;\n            console.log(data)\n            if(data.status == 401) {\n                alert('You need to log in');\n                props.history.push('/login');\n            }\n            if(data.status == 200) {\n                let newState = {}\n                data.options.forEach(option => {\n                    newState[option.name] = option.value\n                });\n                setState(newState);\n            }\n        })\n        .catch(err => {\n            alert\n        (err.message || 'something went wrong');            \n        })\n    }\n\n    useEffect(() => {\n        updatePreferences();\n    }, []);\n\n    return (\n        <div id=\"page-wrapper\" >\n            <div id=\"page-inner\">\n                <div className=\"row text-center\" style={{display: \"flex\", justifyContent: 'center'}}>\n                    <div className=\"col-lg-6 col-md-8 col-sm-10 col-xs-10 text-center\">\n                        <h3>Preferences</h3>\n                        <br />\n                        <div className='row'>\n                            <div className=\"panel panel-primary\">\n                                <div className=\"panel-heading\">\n                                    Customize your bot!\n                                </div>\n                                <div className=\"panel-body\">\n                                    <div class=\"input-group\">\n                                        <span class=\"input-group-addon\">Margin</span>\n                                        <input type=\"number\" class=\"form-control\" onChange={e => {\n                                            setState(state => {\n                                                return {...state, margin: e.target.value}\n                                            })\n                                        }} value={state.margin} />\n                                        <span class=\"input-group-addon btn btn-info\" style={{backgroundColor: '#428bca', color: 'white'}}\n                                        onClick={e => handleSubmit('margin')}  disabled={loading}>Save</span>\n                                    </div>\n                                    <br />\n                                    <br />\n\n                                </div>\n                                <div className=\"panel-footer\">\n                                    {message || 'These values will alter the bot\\'s performance'}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Prefereces;"],"sourceRoot":""}